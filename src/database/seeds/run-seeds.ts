import { DataSource, DataSourceOptions } from 'typeorm';
import * as dotenv from 'dotenv';
import * as path from 'path';
import { seedCategories } from './categories.seed';
import { seedAdmin } from './admin.seed';
import { seedTestUsers } from './test-users.seed';
import { seedOrders } from './orders.seed';

async function runSeeds() {
  console.log('üå± –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
  const envConfigPath = path.resolve(__dirname, '../../../.env');
  console.log(`- –ó–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞ –∏–∑: ${envConfigPath}`);
  dotenv.config({ path: envConfigPath });

  const dbConfig = {
    host: process.env.DB_HOST || 'localhost',
    port: parseInt(process.env.DB_PORT || '5432', 10),
    username: process.env.DB_USERNAME || 'postgres',
    password: process.env.DB_PASSWORD || '',
    database: process.env.DB_DATABASE || 'uzbekistan_services',
  };

  console.log('- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î:');
  console.log(`  - –•–æ—Å—Ç: ${dbConfig.host}`);
  console.log(`  - –ü–æ—Ä—Ç: ${dbConfig.port}`);
  console.log(`  - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${dbConfig.username}`);
  console.log(`  - –¢–∏–ø –ø–∞—Ä–æ–ª—è: ${typeof dbConfig.password}`);
  console.log(`  - –ü–∞—Ä–æ–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω: ${dbConfig.password !== ''}`);
  console.log(`  - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${dbConfig.database}`);

  const dataSource = new DataSource({
    type: 'postgres',
    ...dbConfig,
    entities: [__dirname + '/../../**/*.entity{.ts,.js}'],
    synchronize: true,
    logging: false,
  });

  try {
    await dataSource.initialize();
    console.log('üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –ó–∞–ø—É—Å–∫–∞–µ–º seeds –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    await seedAdmin(dataSource);           // –°–Ω–∞—á–∞–ª–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
    await seedTestUsers(dataSource);       // –ó–∞—Ç–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    await seedCategories(dataSource);      // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
    await seedOrders(dataSource);          // –ó–∞–∫–∞–∑—ã

    console.log('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('');
    console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('–°—É–ø–µ—Ä –ê–¥–º–∏–Ω: admin@uzbekservices.uz / admin123456');
    console.log('–ê–¥–º–∏–Ω: admin2@uzbekservices.uz / admin123');
    console.log('–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: moderator@uzbekservices.uz / moderator123');
    console.log('–ó–∞–∫–∞–∑—á–∏–∫: customer@test.uz / test123');
    console.log('–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: executor@test.uz / test123');
    console.log('–£–Ω–∏–≤–µ—Ä—Å–∞–ª: both@test.uz / test123');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    if (dataSource.isInitialized) {
      await dataSource.destroy();
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runSeeds();
}

export { runSeeds };